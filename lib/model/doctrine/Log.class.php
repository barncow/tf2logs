<?php

/**
 * Log
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Log extends BaseLog
{
  protected $_timeStart;
  protected $_scrubbedLog = "";
  
  public function set_timeStart($timeStart) {
    $this->_timeStart = $timeStart;
  }
  
  public function get_timeStart() {
    return $this->_timeStart;
  }
  
  public function appendToScrubbedLog($logLine) {
    $this->_scrubbedLog .= $logLine."\n";
  }
  
  public function getScrubbedLog() {
    return $this->_scrubbedLog;
  }
  
  /**
  * Adds a stat record for the given player, if unique.
  */
  public function addUniqueStatFromPlayerInfo(PlayerInfo $playerInfo) {
    $addStat = true;
    foreach($this->Stats as $key => $stat) {
      if($stat->equalsPlayerInfo($playerInfo)) {
        $addStat = false;
        break;
      }
    }
    
    //no need to track the console's stats.
    if($addStat && $playerInfo->getSteamid() != "Console") {
      $stat = new Stat();
      $stat->setPlayerInfoAttributes($playerInfo);
      $this->Stats[] = $stat;
    }
  }
  
  /**
  * For an array of given PlayerInfo objects, will add the unique players.
  */
  public function addUniqueStatsFromPlayerInfos($playerInfos) {
    foreach($playerInfos as $key => $pi) {
      if(!($pi instanceof PlayerInfo)) {
        throw new InvalidArgumentException("playerInfos given to addUniqueStatsFromPlayerInfos must be of PlayerInfo type.");
      }
      
      $this->addUniqueStatFromPlayerInfo($pi);
    }
  }
}

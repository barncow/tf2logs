<?php

/**
 * BasePlayer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $numeric_steamid
 * @property string $steamid
 * @property string $credential
 * @property Doctrine_Collection $Stats
 * @property Doctrine_Collection $PlayerStats
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getNumericSteamid()  Returns the current record's "numeric_steamid" value
 * @method string              getSteamid()         Returns the current record's "steamid" value
 * @method string              getCredential()      Returns the current record's "credential" value
 * @method Doctrine_Collection getStats()           Returns the current record's "Stats" collection
 * @method Doctrine_Collection getPlayerStats()     Returns the current record's "PlayerStats" collection
 * @method Player              setId()              Sets the current record's "id" value
 * @method Player              setNumericSteamid()  Sets the current record's "numeric_steamid" value
 * @method Player              setSteamid()         Sets the current record's "steamid" value
 * @method Player              setCredential()      Sets the current record's "credential" value
 * @method Player              setStats()           Sets the current record's "Stats" collection
 * @method Player              setPlayerStats()     Sets the current record's "PlayerStats" collection
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlayer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('player');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('numeric_steamid', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('steamid', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('credential', 'string', 10, array(
             'type' => 'string',
             'default' => 'user',
             'notnull' => true,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Stat as Stats', array(
             'local' => 'id',
             'foreign' => 'player_id'));

        $this->hasMany('PlayerStat as PlayerStats', array(
             'local' => 'id',
             'foreign' => 'player_id'));
    }
}
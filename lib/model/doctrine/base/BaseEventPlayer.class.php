<?php

/**
 * BaseEventPlayer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $event_id
 * @property string $event_player_type
 * @property integer $player_id
 * @property Player $Player
 * @property Event $Event
 * 
 * @method integer     getEventId()           Returns the current record's "event_id" value
 * @method string      getEventPlayerType()   Returns the current record's "event_player_type" value
 * @method integer     getPlayerId()          Returns the current record's "player_id" value
 * @method Player      getPlayer()            Returns the current record's "Player" value
 * @method Event       getEvent()             Returns the current record's "Event" value
 * @method EventPlayer setEventId()           Sets the current record's "event_id" value
 * @method EventPlayer setEventPlayerType()   Sets the current record's "event_player_type" value
 * @method EventPlayer setPlayerId()          Sets the current record's "player_id" value
 * @method EventPlayer setPlayer()            Sets the current record's "Player" value
 * @method EventPlayer setEvent()             Sets the current record's "Event" value
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Brian Barnekow
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventPlayer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_player');
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('event_player_type', 'string', 1, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('player_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Player', array(
             'local' => 'player_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}
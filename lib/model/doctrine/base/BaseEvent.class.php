<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $log_id
 * @property string $event_type
 * @property integer $elapsed_seconds
 * @property integer $attacker
 * @property string $attacker_coord
 * @property integer $victim
 * @property string $victim_coord
 * @property integer $assist
 * @property string $assist_coord
 * @property integer $player_id
 * @property string $text
 * @property Log $Log
 * 
 * @method integer getLogId()           Returns the current record's "log_id" value
 * @method string  getEventType()       Returns the current record's "event_type" value
 * @method integer getElapsedSeconds()  Returns the current record's "elapsed_seconds" value
 * @method integer getAttacker()        Returns the current record's "attacker" value
 * @method string  getAttackerCoord()   Returns the current record's "attacker_coord" value
 * @method integer getVictim()          Returns the current record's "victim" value
 * @method string  getVictimCoord()     Returns the current record's "victim_coord" value
 * @method integer getAssist()          Returns the current record's "assist" value
 * @method string  getAssistCoord()     Returns the current record's "assist_coord" value
 * @method integer getPlayerId()        Returns the current record's "player_id" value
 * @method string  getText()            Returns the current record's "text" value
 * @method Log     getLog()             Returns the current record's "Log" value
 * @method Event   setLogId()           Sets the current record's "log_id" value
 * @method Event   setEventType()       Sets the current record's "event_type" value
 * @method Event   setElapsedSeconds()  Sets the current record's "elapsed_seconds" value
 * @method Event   setAttacker()        Sets the current record's "attacker" value
 * @method Event   setAttackerCoord()   Sets the current record's "attacker_coord" value
 * @method Event   setVictim()          Sets the current record's "victim" value
 * @method Event   setVictimCoord()     Sets the current record's "victim_coord" value
 * @method Event   setAssist()          Sets the current record's "assist" value
 * @method Event   setAssistCoord()     Sets the current record's "assist_coord" value
 * @method Event   setPlayerId()        Sets the current record's "player_id" value
 * @method Event   setText()            Sets the current record's "text" value
 * @method Event   setLog()             Sets the current record's "Log" value
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('log_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('event_type', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('elapsed_seconds', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('attacker', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('attacker_coord', 'string', 17, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 17,
             ));
        $this->hasColumn('victim', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('victim_coord', 'string', 17, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 17,
             ));
        $this->hasColumn('assist', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('assist_coord', 'string', 17, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 17,
             ));
        $this->hasColumn('player_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Log', array(
             'local' => 'log_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}
<?php

/**
 * BaseRoleStat
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $role_id
 * @property integer $stat_id
 * @property integer $time_played
 * @property Role $Role
 * @property Stat $Stat
 * 
 * @method integer  getRoleId()      Returns the current record's "role_id" value
 * @method integer  getStatId()      Returns the current record's "stat_id" value
 * @method integer  getTimePlayed()  Returns the current record's "time_played" value
 * @method Role     getRole()        Returns the current record's "Role" value
 * @method Stat     getStat()        Returns the current record's "Stat" value
 * @method RoleStat setRoleId()      Sets the current record's "role_id" value
 * @method RoleStat setStatId()      Sets the current record's "stat_id" value
 * @method RoleStat setTimePlayed()  Sets the current record's "time_played" value
 * @method RoleStat setRole()        Sets the current record's "Role" value
 * @method RoleStat setStat()        Sets the current record's "Stat" value
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRoleStat extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('role_stat');
        $this->hasColumn('role_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('stat_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('time_played', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Role', array(
             'local' => 'role_id',
             'foreign' => 'id'));

        $this->hasOne('Stat', array(
             'local' => 'stat_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}
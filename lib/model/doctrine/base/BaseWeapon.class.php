<?php

/**
 * BaseWeapon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $key_name
 * @property string $name
 * @property integer $role_id
 * @property string $image_name
 * @property Role $Role
 * @property Doctrine_Collection $Stats
 * @property Doctrine_Collection $WeaponStats
 * @property Doctrine_Collection $Weapons
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getKeyName()     Returns the current record's "key_name" value
 * @method string              getName()        Returns the current record's "name" value
 * @method integer             getRoleId()      Returns the current record's "role_id" value
 * @method string              getImageName()   Returns the current record's "image_name" value
 * @method Role                getRole()        Returns the current record's "Role" value
 * @method Doctrine_Collection getStats()       Returns the current record's "Stats" collection
 * @method Doctrine_Collection getWeaponStats() Returns the current record's "WeaponStats" collection
 * @method Doctrine_Collection getWeapons()     Returns the current record's "Weapons" collection
 * @method Weapon              setId()          Sets the current record's "id" value
 * @method Weapon              setKeyName()     Sets the current record's "key_name" value
 * @method Weapon              setName()        Sets the current record's "name" value
 * @method Weapon              setRoleId()      Sets the current record's "role_id" value
 * @method Weapon              setImageName()   Sets the current record's "image_name" value
 * @method Weapon              setRole()        Sets the current record's "Role" value
 * @method Weapon              setStats()       Sets the current record's "Stats" collection
 * @method Weapon              setWeaponStats() Sets the current record's "WeaponStats" collection
 * @method Weapon              setWeapons()     Sets the current record's "Weapons" collection
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Brian Barnekow
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWeapon extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('weapon');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('key_name', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 40,
             ));
        $this->hasColumn('name', 'string', 40, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('role_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => false,
             'autoincrement' => false,
             'notnull' => false,
             ));
        $this->hasColumn('image_name', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Role', array(
             'local' => 'role_id',
             'foreign' => 'id'));

        $this->hasMany('Stat as Stats', array(
             'refClass' => 'WeaponStat',
             'local' => 'weapon_id',
             'foreign' => 'stat_id'));

        $this->hasMany('WeaponStat as WeaponStats', array(
             'local' => 'id',
             'foreign' => 'weapon_id'));

        $this->hasMany('Event as Weapons', array(
             'local' => 'id',
             'foreign' => 'weapon_id'));
    }
}
<?php

/**
 * BaseRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $key_name
 * @property string $name
 * @property Doctrine_Collection $Stats
 * @property Weapon $Weapon
 * @property Doctrine_Collection $UsedRoles
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getKeyName()   Returns the current record's "key_name" value
 * @method string              getName()      Returns the current record's "name" value
 * @method Doctrine_Collection getStats()     Returns the current record's "Stats" collection
 * @method Weapon              getWeapon()    Returns the current record's "Weapon" value
 * @method Doctrine_Collection getUsedRoles() Returns the current record's "UsedRoles" collection
 * @method Role                setId()        Sets the current record's "id" value
 * @method Role                setKeyName()   Sets the current record's "key_name" value
 * @method Role                setName()      Sets the current record's "name" value
 * @method Role                setStats()     Sets the current record's "Stats" collection
 * @method Role                setWeapon()    Sets the current record's "Weapon" value
 * @method Role                setUsedRoles() Sets the current record's "UsedRoles" collection
 * 
 * @package    tf2logs
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('role');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('key_name', 'string', 12, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Stat as Stats', array(
             'refClass' => 'UsedRole',
             'local' => 'role_id',
             'foreign' => 'stat_id'));

        $this->hasOne('Weapon', array(
             'local' => 'id',
             'foreign' => 'role_id'));

        $this->hasMany('UsedRole as UsedRoles', array(
             'local' => 'id',
             'foreign' => 'role_id'));
    }
}